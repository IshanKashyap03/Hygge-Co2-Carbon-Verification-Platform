# ONLY USE THIS DOCKER-COMPOSE FILE IF THE HYGGE TEST ENVIRONMENT PUBLISHER IS DOWN
services:
  frontend:
    build:
      context: .
      dockerfile: dev.Dockerfile # We will only be running the frontend together with the backend on local
    depends_on:
      - api
    networks:
      - test-network
    ports:
      - "8080:8080"
    environment:
      - ENV=test

  api:
    build:
      context: .
      dockerfile: ./backend/api/Dockerfile
    env_file:
      - .env.test
    ports:
      - "7090:7090"
    depends_on:
      - db
    environment:
      DATABASE_HOST: db
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      ENV: test
    networks:
      - test-network
    volumes:
      - ./logs:/var/log/app

  publisher:
    build:
      context: .
      dockerfile: ./backend/blockchain_publisher/Dockerfile
    env_file:
      - .env.test
    environment:
      PUBLISHER_DATABASE_HOST: db
      POSTGRES_DB: ${PUBLISHER_DATABASE_NAME}
      POSTGRES_USER: ${PUBLISHER_DATABASE_USER}
      POSTGRES_PASSWORD: ${PUBLISHER_DATABASE_PASSWORD}
      ENV: test
    networks:
      - test-network
    volumes:
      - ./logs:/var/log/app

  db:
    image: postgres:14
    env_file:
      - .env.test
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    networks:
      - test-network
    command: -p ${DATABASE_PORT}

volumes:
  postgres_data:
networks:
  test-network:
    driver: bridge
